<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">/home/shaan/Documents/CSVSample_user.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">user,password</stringProp>
        </CSVDataSet>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="[JSR223]  java-ddp-client" enabled="true">
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">import com.keysolutions.*;
import com.keysolutions.ddpclient.*;
import java.util.*;


String un = vars.get(&quot;user&quot;);
String pw = vars.get(&quot;password&quot;);

DDPClient client = new DDPClient(&quot;localhost&quot;, 3000)
log.info(&quot;\nWVWVWVWVWVWVWVVW &quot;+(client.connect()).toString());

Thread.sleep(1500);
String loggedING;
Object[] methodArgs = new Object[1];
UsernameAuth usernamePassword = new UsernameAuth(un,pw);
methodArgs[0] = usernamePassword;
client.call(&quot;login&quot;,methodArgs, new DDPListener() {
	@Override
	void onResult(Map&lt;String, Object&gt; resultFields) {
		vars.put(&quot;Res&quot;,(&quot;-------------- &quot;+resultFields).toString());
		/**if (resultFields.containsKey(DdpMessageField.ERROR)) {
			Map&lt;String, Object&gt; error = (Map&lt;String, Object&gt;) resultFields.get(DdpMessageField.ERROR);
			errorReason = (String) error.get(&quot;reason&quot;);
			System.err.println(&quot;Login failure: &quot; + errorReason);
		} else {
			loggedIn = true;
		}**/
	}
});
log.info(&quot;RESULTS FIELD\nRESULTS FIELD\n res = &quot;+vars.get(&quot;Res&quot;));
/**
log.info(&quot;dsfa\n\n &quot;+loggedING)
	

String arggs = &quot;test&quot;;
client.call(&quot;tasks.insert&quot;,arggs);
client.call(&quot;tasks.insert&quot;,arggs, new DDPListener() {
	@Override
	void onResult(Map&lt;String, Object&gt; resultFields) {
		if (resultFields.containsKey(DdpMessageField.ERROR)) {
			Map&lt;String, Object&gt; error = (Map&lt;String, Object&gt;) resultFields.get(DdpMessageField.ERROR);
			errorReason = (String) error.get(&quot;reason&quot;);
			System.err.println(&quot;Login failure: &quot; + errorReason);
		} else {
			System.err.println(&quot;adffasdfasfd&quot;);
		}
	}
});**/
Thread.sleep(1500)


client.disconnect();
log.info(&quot;dsfafasfsdaf\n\n\n\n\n\n\n\ndasfsdafasdfdasfd&quot;+vars.get(&quot;Res&quot;));


















</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">import com.keysolutions.*;
import com.keysolutions.ddpclient.*;
import java.util.*;</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
